{"version":3,"sources":["../server/server.js"],"names":["express","require","router","Router","mongoose","secrets","bodyParser","app","port","connect","mongo_connection","useMongoClient","allowCrossDomain","req","res","next","header","use","urlencoded","extended","json","listen","console","log"],"mappings":";;AAAA;AACA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AAAA,IACIC,SAASF,QAAQG,MAAR,EADb;AAAA,IAEIC,WAAWH,QAAQ,UAAR,CAFf;AAAA,IAGII,UAAUJ,QAAQ,kBAAR,CAHd;AAAA,IAIIK,aAAaL,QAAQ,aAAR,CAJjB;;AAMA;AACA,IAAIM,MAAMP,SAAV;;AAEA;AACAC,QAAQ,kBAAR;AACAA,QAAQ,oBAAR;;AAEA;AACA,IAAIO,OAAO,IAAX;;AAEA;AACAJ,SAASK,OAAT,CAAiBJ,QAAQK,gBAAzB,EAA2C,EAAEC,gBAAgB,IAAlB,EAA3C;;AAEA;AACA,IAAIC,mBAAmB,SAAnBA,gBAAmB,CAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC7CD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,gEAA3C;AACAF,QAAIE,MAAJ,CAAW,8BAAX,EAA2C,iCAA3C;AACAD;AACH,CALD;AAMAR,IAAIU,GAAJ,CAAQL,gBAAR;;AAEA;AACAL,IAAIU,GAAJ,CAAQX,WAAWY,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;AAGAZ,IAAIU,GAAJ,CAAQX,WAAWc,IAAX,EAAR;;AAEA;AACAnB,QAAQ,UAAR,EAAoBM,GAApB,EAAyBL,MAAzB;;AAEA;AACAK,IAAIc,MAAJ,CAAWb,IAAX;AACAc,QAAQC,GAAR,CAAY,4BAA4Bf,IAAxC","file":"server.js","sourcesContent":["// Get the packages we need\nvar express = require('express'),\n    router = express.Router(),\n    mongoose = require('mongoose'),\n    secrets = require('./config/secrets'),\n    bodyParser = require('body-parser');\n\n// Create our Express application\nvar app = express();\n\n// include Schema\nrequire('./models/user.js');\nrequire('./models/recipe.js');\n\n// Use environment defined port or 4000\nvar port = 4000;\n\n// Connect to a MongoDB\nmongoose.connect(secrets.mongo_connection, { useMongoClient: true});\n\n// Allow CORS so that backend and frontend could be put on different servers\nvar allowCrossDomain = function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"X-Requested-With, X-HTTP-Method-Override, Content-Type, Accept\");\n    res.header(\"Access-Control-Allow-Methods\", \"POST, GET, PUT, DELETE, OPTIONS\");\n    next();\n};\napp.use(allowCrossDomain);\n\n// Use the body-parser package in our application\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\napp.use(bodyParser.json());\n\n// Use routes as a module (see index.js)\nrequire('./routes')(app, router);\n\n// Start the server\napp.listen(port);\nconsole.log('Server running on port ' + port);\n"]}