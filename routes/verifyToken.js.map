{"version":3,"sources":["../../server/routes/verifyToken.js"],"names":["jwt","require","secrets","verifyToken","req","res","next","token","headers","status","send","message","auth","verify","secret","err","decoded","userId","id","module","exports"],"mappings":";;AAAA,IAAIA,MAAMC,QAAQ,cAAR,CAAV;AACA,IAAIC,UAAUD,QAAQ,mBAAR,CAAd;;AAEA;;;AAGA,SAASE,WAAT,CAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AACpC,KAAIC,QAAQH,IAAII,OAAJ,CAAY,gBAAZ,CAAZ;;AAEA,KAAI,CAACD,KAAL,EAAY,OAAOF,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAS,oBAAV,EAAgCC,MAAM,KAAtC,EAArB,CAAP,CAHwB,CAGmD;;AAEvFZ,KAAIa,MAAJ,CAAWN,KAAX,EAAkBL,QAAQY,MAA1B,EAAkC,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACxD,MAAID,GAAJ,EAAS,OAAOV,IAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,SAAQ,+BAAT,EAA0CC,MAAM,KAAhD,EAArB,CAAP,CAD+C,CACsC;;AAE9F;AACAR,MAAIa,MAAJ,GAAaD,QAAQE,EAArB;AACAZ;AACA,EAND;AAOA;;AAEDa,OAAOC,OAAP,GAAiBjB,WAAjB","file":"verifyToken.js","sourcesContent":["var jwt = require('jsonwebtoken');\nvar secrets = require('../config/secrets');\n\n/*\n* Validate token and add decoded id to the request\n*/ \nfunction verifyToken(req, res, next) {\n\tvar token = req.headers['x-access-token'];\n\n\tif (!token) return res.status(403).send({message: 'No token provided.', auth: false}); // 401 Unauthorized\n\n\tjwt.verify(token, secrets.secret, function(err, decoded) {\n\t\tif (err) return res.status(500).send({message:'Failed to authenticate token.', auth: false}); // 500 Server Error\n\t\n\t\t// Success => save to request for other routes \n\t\treq.userId = decoded.id;\n\t\tnext();\n\t});\n}\n\nmodule.exports = verifyToken;"]}